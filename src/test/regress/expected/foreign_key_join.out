--
-- Test Foreign Key Joins.
--
CREATE TABLE t1
(
    c1 int not null,
    c2 int not null,
    CONSTRAINT t1_pkey PRIMARY KEY (c1)
);
CREATE TABLE t2
(
    c3 int not null,
    c4 int not null,
    CONSTRAINT t2_pkey PRIMARY KEY (c3),
    CONSTRAINT t2_c3_fkey FOREIGN KEY (c3) REFERENCES t1 (c1)
);
INSERT INTO t1 (c1, c2) VALUES (1, 10);
INSERT INTO t1 (c1, c2) VALUES (2, 20);
INSERT INTO t1 (c1, c2) VALUES (3, 30);
INSERT INTO t2 (c3, c4) VALUES (1, 10);
INSERT INTO t2 (c3, c4) VALUES (3, 30);
--
-- Test renaming tables and columns.
--
CREATE VIEW v1 AS
SELECT *
FROM t1
JOIN t2 KEY (c3) -> t1 (c1);
\d+ v1
                             View "public.v1"
 Column |  Type   | Collation | Nullable | Default | Storage | Description 
--------+---------+-----------+----------+---------+---------+-------------
 c1     | integer |           |          |         | plain   | 
 c2     | integer |           |          |         | plain   | 
 c3     | integer |           |          |         | plain   | 
 c4     | integer |           |          |         | plain   | 
View definition:
 SELECT t1.c1,
    t1.c2,
    t2.c3,
    t2.c4
   FROM t1
     JOIN t2 KEY (c3) -> t1 (c1);

SELECT * FROM v1; -- ok
 c1 | c2 | c3 | c4 
----+----+----+----
  1 | 10 |  1 | 10
  3 | 30 |  3 | 30
(2 rows)

ALTER TABLE t1 RENAME COLUMN c1 TO c1_renamed;
ALTER TABLE t2 RENAME COLUMN c3 TO c3_renamed;
ALTER TABLE t1 RENAME TO t1_renamed;
ALTER TABLE t2 RENAME TO t2_renamed;
\d+ v1
                             View "public.v1"
 Column |  Type   | Collation | Nullable | Default | Storage | Description 
--------+---------+-----------+----------+---------+---------+-------------
 c1     | integer |           |          |         | plain   | 
 c2     | integer |           |          |         | plain   | 
 c3     | integer |           |          |         | plain   | 
 c4     | integer |           |          |         | plain   | 
View definition:
 SELECT t1_renamed.c1_renamed AS c1,
    t1_renamed.c2,
    t2_renamed.c3_renamed AS c3,
    t2_renamed.c4
   FROM t1_renamed
     JOIN t2_renamed KEY (c3_renamed) -> t1_renamed (c1_renamed);

SELECT * FROM v1; -- ok
 c1 | c2 | c3 | c4 
----+----+----+----
  1 | 10 |  1 | 10
  3 | 30 |  3 | 30
(2 rows)

-- Undo the effect of the renames
ALTER TABLE t2_renamed RENAME TO t2;
ALTER TABLE t1_renamed RENAME TO t1;
ALTER TABLE t2 RENAME COLUMN c3_renamed TO c3;
ALTER TABLE t1 RENAME COLUMN c1_renamed TO c1;
\d+ v1
                             View "public.v1"
 Column |  Type   | Collation | Nullable | Default | Storage | Description 
--------+---------+-----------+----------+---------+---------+-------------
 c1     | integer |           |          |         | plain   | 
 c2     | integer |           |          |         | plain   | 
 c3     | integer |           |          |         | plain   | 
 c4     | integer |           |          |         | plain   | 
View definition:
 SELECT t1.c1,
    t1.c2,
    t2.c3,
    t2.c4
   FROM t1
     JOIN t2 KEY (c3) -> t1 (c1);

-- Test so we didn't break the parser
SELECT 1<-2; -- ok, false
 ?column? 
----------
 f
(1 row)

SELECT * FROM v1; -- ok
 c1 | c2 | c3 | c4 
----+----+----+----
  1 | 10 |  1 | 10
  3 | 30 |  3 | 30
(2 rows)

SELECT * FROM t1 JOIN t2 KEY (c3) -> t1 (c1); -- ok
 c1 | c2 | c3 | c4 
----+----+----+----
  1 | 10 |  1 | 10
  3 | 30 |  3 | 30
(2 rows)

SELECT * FROM t1 JOIN t2 KEY (c3) ->/*comment*/ t1 (c1); -- ok
 c1 | c2 | c3 | c4 
----+----+----+----
  1 | 10 |  1 | 10
  3 | 30 |  3 | 30
(2 rows)

SELECT * FROM t1 JOIN t2 KEY (c3) /*comment*/-> t1 (c1); -- ok
 c1 | c2 | c3 | c4 
----+----+----+----
  1 | 10 |  1 | 10
  3 | 30 |  3 | 30
(2 rows)

SELECT * FROM t1 JOIN t2 KEY (c3) /*comment*/->/*comment*/ t1 (c1); -- ok
 c1 | c2 | c3 | c4 
----+----+----+----
  1 | 10 |  1 | 10
  3 | 30 |  3 | 30
(2 rows)

SELECT * FROM t1 JOIN t2 KEY (c3) - > t1 (c2); -- error
ERROR:  syntax error at or near "-"
LINE 1: SELECT * FROM t1 JOIN t2 KEY (c3) - > t1 (c2);
                                          ^
SELECT * FROM t1 JOIN t2 KEY (c3) -> t1 (c2); -- error
ERROR:  there is no foreign key constraint on table "t2" (c3) referencing table "t1" (c2)
LINE 1: SELECT * FROM t1 JOIN t2 KEY (c3) -> t1 (c2);
                                 ^
SELECT * FROM t1 JOIN t2 KEY (c4) -> t1 (c1); -- error
ERROR:  there is no foreign key constraint on table "t2" (c4) referencing table "t1" (c1)
LINE 1: SELECT * FROM t1 JOIN t2 KEY (c4) -> t1 (c1);
                                 ^
SELECT * FROM t1 JOIN t2 KEY (c3,c4) -> t1 (c1,c2); -- error
ERROR:  there is no foreign key constraint on table "t2" (c3, c4) referencing table "t1" (c1, c2)
LINE 1: SELECT * FROM t1 JOIN t2 KEY (c3,c4) -> t1 (c1,c2);
                                 ^
SELECT * FROM t1 JOIN t2 KEY (c3) <- t1 (c1); -- error
ERROR:  there is no foreign key constraint on table "t1" (c1) referencing table "t2" (c3)
LINE 1: SELECT * FROM t1 JOIN t2 KEY (c3) <- t1 (c1);
                                 ^
SELECT * FROM t1 JOIN t2 KEY (c1) <- t1 (c3); -- error
ERROR:  there is no foreign key constraint on table "t1" (c3) referencing table "t2" (c1)
LINE 1: SELECT * FROM t1 JOIN t2 KEY (c1) <- t1 (c3);
                                 ^
SELECT * FROM t1 JOIN t2 KEY (c3) <- t1 (c2); -- error
ERROR:  there is no foreign key constraint on table "t1" (c2) referencing table "t2" (c3)
LINE 1: SELECT * FROM t1 JOIN t2 KEY (c3) <- t1 (c2);
                                 ^
SELECT * FROM t1 JOIN t2 KEY (c4) <- t1 (c1); -- error
ERROR:  there is no foreign key constraint on table "t1" (c1) referencing table "t2" (c4)
LINE 1: SELECT * FROM t1 JOIN t2 KEY (c4) <- t1 (c1);
                                 ^
SELECT * FROM t1 JOIN t2 KEY (c3,c4) <- t1 (c1,c2); -- error
ERROR:  there is no foreign key constraint on table "t1" (c1, c2) referencing table "t2" (c3, c4)
LINE 1: SELECT * FROM t1 JOIN t2 KEY (c3,c4) <- t1 (c1,c2);
                                 ^
SELECT * FROM t2 JOIN t1 KEY (c1) <- t2 (c3); -- ok
 c3 | c4 | c1 | c2 
----+----+----+----
  1 | 10 |  1 | 10
  3 | 30 |  3 | 30
(2 rows)

SELECT * FROM t2 JOIN t1 KEY (c1) <-/*comment*/ t2 (c3); -- ok
 c3 | c4 | c1 | c2 
----+----+----+----
  1 | 10 |  1 | 10
  3 | 30 |  3 | 30
(2 rows)

SELECT * FROM t2 JOIN t1 KEY (c1) /*comment*/<- t2 (c3); -- ok
 c3 | c4 | c1 | c2 
----+----+----+----
  1 | 10 |  1 | 10
  3 | 30 |  3 | 30
(2 rows)

SELECT * FROM t2 JOIN t1 KEY (c1) /*comment*/<-/*comment*/ t2 (c3); -- ok
 c3 | c4 | c1 | c2 
----+----+----+----
  1 | 10 |  1 | 10
  3 | 30 |  3 | 30
(2 rows)

SELECT * FROM t2 JOIN t1 KEY (c1) < - t2 (c3); -- error
ERROR:  syntax error at or near "<"
LINE 1: SELECT * FROM t2 JOIN t1 KEY (c1) < - t2 (c3);
                                          ^
SELECT * FROM t2 JOIN t1 KEY (c1) <- t2 (c4); -- error
ERROR:  there is no foreign key constraint on table "t2" (c4) referencing table "t1" (c1)
LINE 1: SELECT * FROM t2 JOIN t1 KEY (c1) <- t2 (c4);
                                 ^
SELECT * FROM t2 JOIN t1 KEY (c2) <- t2 (c3); -- error
ERROR:  there is no foreign key constraint on table "t2" (c3) referencing table "t1" (c2)
LINE 1: SELECT * FROM t2 JOIN t1 KEY (c2) <- t2 (c3);
                                 ^
SELECT * FROM t2 JOIN t1 KEY (c1,c2) <- t2 (c3,c4); -- error
ERROR:  there is no foreign key constraint on table "t2" (c3, c4) referencing table "t1" (c1, c2)
LINE 1: SELECT * FROM t2 JOIN t1 KEY (c1,c2) <- t2 (c3,c4);
                                 ^
SELECT * FROM t2 JOIN t1 KEY (c1) -> t2 (c3); -- error
ERROR:  there is no foreign key constraint on table "t1" (c1) referencing table "t2" (c3)
LINE 1: SELECT * FROM t2 JOIN t1 KEY (c1) -> t2 (c3);
                                 ^
SELECT * FROM t2 JOIN t1 KEY (c1) -> t2 (c4); -- error
ERROR:  there is no foreign key constraint on table "t1" (c1) referencing table "t2" (c4)
LINE 1: SELECT * FROM t2 JOIN t1 KEY (c1) -> t2 (c4);
                                 ^
SELECT * FROM t2 JOIN t1 KEY (c2) -> t2 (c3); -- error
ERROR:  there is no foreign key constraint on table "t1" (c2) referencing table "t2" (c3)
LINE 1: SELECT * FROM t2 JOIN t1 KEY (c2) -> t2 (c3);
                                 ^
SELECT * FROM t2 JOIN t1 KEY (c1,c2) -> t2 (c3,c4); -- error
ERROR:  there is no foreign key constraint on table "t1" (c1, c2) referencing table "t2" (c3, c4)
LINE 1: SELECT * FROM t2 JOIN t1 KEY (c1,c2) -> t2 (c3,c4);
                                 ^
ALTER TABLE t2 DROP CONSTRAINT t2_c3_fkey; -- error
ERROR:  cannot drop constraint t2_c3_fkey on table t2 because other objects depend on it
DETAIL:  view v1 depends on constraint t2_c3_fkey on table t2
HINT:  Use DROP ... CASCADE to drop the dependent objects too.
DROP VIEW v1;
ALTER TABLE t2 DROP CONSTRAINT t2_c3_fkey;
SELECT * FROM t1 JOIN t2 KEY (c3) -> t1 (c1); -- error
ERROR:  there is no foreign key constraint on table "t2" (c3) referencing table "t1" (c1)
LINE 1: SELECT * FROM t1 JOIN t2 KEY (c3) -> t1 (c1);
                                 ^
SELECT * FROM t2 JOIN t1 KEY (c1) <- t2 (c3); -- error
ERROR:  there is no foreign key constraint on table "t2" (c3) referencing table "t1" (c1)
LINE 1: SELECT * FROM t2 JOIN t1 KEY (c1) <- t2 (c3);
                                 ^
ALTER TABLE t1 ADD UNIQUE (c1,c2);
ALTER TABLE t2 ADD CONSTRAINT t2_c3_c4_fkey FOREIGN KEY (c3,c4) REFERENCES t1 (c1,c2);
CREATE VIEW v2 AS
SELECT * FROM t1 JOIN t2 KEY (c3,c4) -> t1 (c1,c2); -- ok
SELECT * FROM t1 JOIN t2 KEY (c3,c4) -> t1 (c1,c2); -- ok
 c1 | c2 | c3 | c4 
----+----+----+----
  1 | 10 |  1 | 10
  3 | 30 |  3 | 30
(2 rows)

SELECT * FROM v2; -- ok
 c1 | c2 | c3 | c4 
----+----+----+----
  1 | 10 |  1 | 10
  3 | 30 |  3 | 30
(2 rows)

\d+ v2
                             View "public.v2"
 Column |  Type   | Collation | Nullable | Default | Storage | Description 
--------+---------+-----------+----------+---------+---------+-------------
 c1     | integer |           |          |         | plain   | 
 c2     | integer |           |          |         | plain   | 
 c3     | integer |           |          |         | plain   | 
 c4     | integer |           |          |         | plain   | 
View definition:
 SELECT t1.c1,
    t1.c2,
    t2.c3,
    t2.c4
   FROM t1
     JOIN t2 KEY (c3, c4) -> t1 (c1, c2);

CREATE VIEW v3 AS
SELECT * FROM t2 JOIN t1 KEY (c1,c2) <- t2 (c3,c4); -- ok
SELECT * FROM t2 JOIN t1 KEY (c1,c2) <- t2 (c3,c4); -- ok
 c3 | c4 | c1 | c2 
----+----+----+----
  1 | 10 |  1 | 10
  3 | 30 |  3 | 30
(2 rows)

\d+ v3
                             View "public.v3"
 Column |  Type   | Collation | Nullable | Default | Storage | Description 
--------+---------+-----------+----------+---------+---------+-------------
 c3     | integer |           |          |         | plain   | 
 c4     | integer |           |          |         | plain   | 
 c1     | integer |           |          |         | plain   | 
 c2     | integer |           |          |         | plain   | 
View definition:
 SELECT t2.c3,
    t2.c4,
    t1.c1,
    t1.c2
   FROM t2
     JOIN t1 KEY (c1, c2) <- t2 (c3, c4);

SELECT * FROM v3; -- ok
 c3 | c4 | c1 | c2 
----+----+----+----
  1 | 10 |  1 | 10
  3 | 30 |  3 | 30
(2 rows)

SELECT * FROM t1 JOIN t2 KEY (c3) -> t1 (c1); -- error
ERROR:  there is no foreign key constraint on table "t2" (c3) referencing table "t1" (c1)
LINE 1: SELECT * FROM t1 JOIN t2 KEY (c3) -> t1 (c1);
                                 ^
SELECT * FROM t2 JOIN t1 KEY (c1) <- t2 (c3); -- error
ERROR:  there is no foreign key constraint on table "t2" (c3) referencing table "t1" (c1)
LINE 1: SELECT * FROM t2 JOIN t1 KEY (c1) <- t2 (c3);
                                 ^
SELECT * FROM t1 JOIN t2 KEY (c3,c4) <- t1 (c1,c2); -- error
ERROR:  there is no foreign key constraint on table "t1" (c1, c2) referencing table "t2" (c3, c4)
LINE 1: SELECT * FROM t1 JOIN t2 KEY (c3,c4) <- t1 (c1,c2);
                                 ^
SELECT * FROM t2 JOIN t1 KEY (c1,c2) -> t2 (c3,c4); -- error
ERROR:  there is no foreign key constraint on table "t1" (c1, c2) referencing table "t2" (c3, c4)
LINE 1: SELECT * FROM t2 JOIN t1 KEY (c1,c2) -> t2 (c3,c4);
                                 ^
--
-- Test nulls and multiple tables
--
CREATE TABLE t3
(
    c5 int,
    c6 int,
    CONSTRAINT t3_c5_c6_fkey FOREIGN KEY (c5, c6) REFERENCES t1 (c1, c2)
);
INSERT INTO t3 (c5, c6) VALUES (1, 10); -- ok
INSERT INTO t3 (c5, c6) VALUES (3, 30); -- ok
INSERT INTO t3 (c5, c6) VALUES (3, NULL); -- ok
INSERT INTO t3 (c5, c6) VALUES (NULL, 30); -- ok
INSERT INTO t3 (c5, c6) VALUES (1234, NULL); -- ok
INSERT INTO t3 (c5, c6) VALUES (NULL, 5678); -- ok
INSERT INTO t3 (c5, c6) VALUES (NULL, NULL); -- ok
SELECT *
FROM t1
JOIN t2 KEY (c3,c4) -> t1 (c1,c2)
JOIN t3 KEY (c5,c6) -> t1 (c1,c2);
 c1 | c2 | c3 | c4 | c5 | c6 
----+----+----+----+----+----
  1 | 10 |  1 | 10 |  1 | 10
  3 | 30 |  3 | 30 |  3 | 30
(2 rows)

SELECT *
FROM t1
JOIN t2 KEY (c3,c4) -> t1 (c1,c2)
LEFT JOIN t3 KEY (c5,c6) -> t1 (c1,c2);
 c1 | c2 | c3 | c4 | c5 | c6 
----+----+----+----+----+----
  1 | 10 |  1 | 10 |  1 | 10
  3 | 30 |  3 | 30 |  3 | 30
(2 rows)

SELECT *
FROM t1
JOIN t2 KEY (c3,c4) -> t1 (c1,c2)
RIGHT JOIN t3 KEY (c5,c6) -> t1 (c1,c2);
 c1 | c2 | c3 | c4 |  c5  |  c6  
----+----+----+----+------+------
  1 | 10 |  1 | 10 |    1 |   10
  3 | 30 |  3 | 30 |    3 |   30
    |    |    |    |    3 |     
    |    |    |    | 1234 |     
    |    |    |    |      |   30
    |    |    |    |      | 5678
    |    |    |    |      |     
(7 rows)

--
-- Test defining foreign key constraints with MATCH FULL
--
CREATE TABLE t4
(
    c7 int,
    c8 int,
    CONSTRAINT t4_c7_c8_fkey FOREIGN KEY (c7, c8) REFERENCES t1 (c1, c2) MATCH FULL
);
INSERT INTO t4 (c7, c8) VALUES (1, 10); -- ok
INSERT INTO t4 (c7, c8) VALUES (3, 30); -- ok
INSERT INTO t4 (c7, c8) VALUES (3, NULL); -- error
ERROR:  insert or update on table "t4" violates foreign key constraint "t4_c7_c8_fkey"
DETAIL:  MATCH FULL does not allow mixing of null and nonnull key values.
INSERT INTO t4 (c7, c8) VALUES (NULL, 30); -- error
ERROR:  insert or update on table "t4" violates foreign key constraint "t4_c7_c8_fkey"
DETAIL:  MATCH FULL does not allow mixing of null and nonnull key values.
INSERT INTO t4 (c7, c8) VALUES (1234, NULL); -- error
ERROR:  insert or update on table "t4" violates foreign key constraint "t4_c7_c8_fkey"
DETAIL:  MATCH FULL does not allow mixing of null and nonnull key values.
INSERT INTO t4 (c7, c8) VALUES (NULL, 5678); -- error
ERROR:  insert or update on table "t4" violates foreign key constraint "t4_c7_c8_fkey"
DETAIL:  MATCH FULL does not allow mixing of null and nonnull key values.
INSERT INTO t4 (c7, c8) VALUES (NULL, NULL); -- ok
SELECT *
FROM t1
JOIN t2 KEY (c3,c4) -> t1 (c1,c2)
JOIN t4 KEY (c7,c8) -> t1 (c1,c2);
 c1 | c2 | c3 | c4 | c7 | c8 
----+----+----+----+----+----
  1 | 10 |  1 | 10 |  1 | 10
  3 | 30 |  3 | 30 |  3 | 30
(2 rows)

SELECT *
FROM t1
JOIN t2 KEY (c3,c4) -> t1 (c1,c2)
LEFT JOIN t4 KEY (c7,c8) -> t1 (c1,c2);
 c1 | c2 | c3 | c4 | c7 | c8 
----+----+----+----+----+----
  1 | 10 |  1 | 10 |  1 | 10
  3 | 30 |  3 | 30 |  3 | 30
(2 rows)

SELECT *
FROM t1
JOIN t2 KEY (c3,c4) -> t1 (c1,c2)
RIGHT JOIN t4 KEY (c7,c8) -> t1 (c1,c2);
 c1 | c2 | c3 | c4 | c7 | c8 
----+----+----+----+----+----
  1 | 10 |  1 | 10 |  1 | 10
  3 | 30 |  3 | 30 |  3 | 30
    |    |    |    |    |   
(3 rows)

-- Recrate stuff for pg_dump tests
ALTER TABLE t2
    ADD CONSTRAINT t2_c3_fkey FOREIGN KEY (c3) REFERENCES t1 (c1);
CREATE VIEW v1 AS
SELECT *
FROM t1
JOIN t2 KEY (c3) -> t1 (c1);
CREATE TABLE t5
(
    c9 int not null,
    c10 int not null,
    c11 int not null,
    c12 int not null,
    CONSTRAINT t5_pkey PRIMARY KEY (c9, c10),
    CONSTRAINT t5_c11_c12_fkey FOREIGN KEY (c11, c12) REFERENCES t1 (c1, c2)
);
INSERT INTO t5 (c9, c10, c11, c12) VALUES (1, 2, 1, 10);
INSERT INTO t5 (c9, c10, c11, c12) VALUES (3, 4, 3, 30);
CREATE TABLE t6
(
    c13 int not null,
    c14 int not null,
    CONSTRAINT t6_c13_c14_fkey FOREIGN KEY (c13, c14) REFERENCES t5 (c9, c10)
);
INSERT INTO t6 (c13, c14) VALUES (1, 2);
INSERT INTO t6 (c13, c14) VALUES (3, 4);
INSERT INTO t6 (c13, c14) VALUES (3, 4);
CREATE TABLE t7
(
    c15 int not null,
    c16 int not null,
    CONSTRAINT t7_c15_c16_fkey FOREIGN KEY (c15, c16) REFERENCES t5 (c9, c10)
);
INSERT INTO t7 (c15, c16) VALUES (1, 2);
INSERT INTO t7 (c15, c16) VALUES (1, 2);
INSERT INTO t7 (c15, c16) VALUES (3, 4);
CREATE TABLE t8
(
    c17 int not null,
    c18 int not null,
    c19 int,
    c20 int,
    CONSTRAINT t8_pkey PRIMARY KEY (c17, c18),
    CONSTRAINT t8_c19_c20_fkey FOREIGN KEY (c19, c20) REFERENCES t1 (c1, c2)
);
INSERT INTO t8 (c17, c18, c19, c20) VALUES (1, 2, 1, 10);
INSERT INTO t8 (c17, c18, c19, c20) VALUES (3, 4, 3, 30);
CREATE TABLE t9
(
    c21 int not null,
    c22 int not null,
    CONSTRAINT t9_c21_c22_fkey FOREIGN KEY (c21, c22) REFERENCES t8 (c17, c18)
);
INSERT INTO t9 (c21, c22) VALUES (1, 2);
INSERT INTO t9 (c21, c22) VALUES (3, 4);
INSERT INTO t9 (c21, c22) VALUES (3, 4);
--
-- Test subqueries
--
SELECT
    a.c1,
    a.c2,
    b.c3,
    b.c4
FROM t1 AS a
JOIN
(
    SELECT * FROM t2
) AS b KEY (c3) -> a (c1);
 c1 | c2 | c3 | c4 
----+----+----+----
  1 | 10 |  1 | 10
  3 | 30 |  3 | 30
(2 rows)

SELECT
    a.c1,
    a.c2,
    b.c3,
    b.c4
FROM
(
    SELECT * FROM t1
) AS a
JOIN
(
    SELECT * FROM t2
) AS b KEY (c3) -> a (c1);
 c1 | c2 | c3 | c4 
----+----+----+----
  1 | 10 |  1 | 10
  3 | 30 |  3 | 30
(2 rows)

SELECT
    a.t1_c1,
    a.t1_c2,
    b.t2_c3,
    b.t2_c4
FROM
(
    SELECT c1 AS t1_c1, c2 AS t1_c2 FROM t1
) AS a
JOIN
(
    SELECT c3 AS t2_c3, c4 AS t2_c4 FROM t2
) AS b KEY (t2_c3) -> a (t1_c1);
 t1_c1 | t1_c2 | t2_c3 | t2_c4 
-------+-------+-------+-------
     1 |    10 |     1 |    10
     3 |    30 |     3 |    30
(2 rows)

SELECT
    a.outer_c1,
    a.outer_c2,
    b.outer_c3,
    b.outer_c4
FROM
(
    SELECT mid_c1 AS outer_c1, mid_c2 AS outer_c2 FROM
    (
        SELECT c1 AS mid_c1, c2 AS mid_c2 FROM t1
    ) sub1
) AS a
JOIN
(
    SELECT mid_c3 AS outer_c3, mid_c4 AS outer_c4 FROM
    (
        SELECT c3 AS mid_c3, c4 AS mid_c4 FROM t2
    ) sub2
) AS b KEY (outer_c3) -> a (outer_c1);
 outer_c1 | outer_c2 | outer_c3 | outer_c4 
----------+----------+----------+----------
        1 |       10 |        1 |       10
        3 |       30 |        3 |       30
(2 rows)

--
-- Test CTEs
--
WITH
q1 AS
(
    SELECT c1 AS q1_c1, c2 AS q1_c2 FROM t1
),
q2 AS
(
    SELECT q1_c1 AS q2_c1, q1_c2 AS q2_c2 FROM q1
),
q3 AS
(
    SELECT c3 AS q3_c3, c4 AS q3_c4 FROM t2
),
q4 AS
(
    SELECT q3_c3 AS q4_c3, q3_c4 AS q4_c4 FROM q3
)
SELECT
    q2_c1,
    q2_c2,
    q4_c3,
    q4_c4
FROM q2 JOIN q4 KEY (q4_c3, q4_c4) -> q2 (q2_c1, q2_c2);
 q2_c1 | q2_c2 | q4_c3 | q4_c4 
-------+-------+-------+-------
     1 |    10 |     1 |    10
     3 |    30 |     3 |    30
(2 rows)

--
-- Test VIEWs
--
DROP VIEW v1, v2, v3;
CREATE VIEW v1 AS
SELECT c1 AS v1_c1, c2 AS v1_c2 FROM t1;
CREATE VIEW v2 AS
SELECT v1_c1 AS v2_c1, v1_c2 AS v2_c2 FROM v1;
CREATE VIEW v3 AS
SELECT c3 AS v3_c3, c4 AS v3_c4 FROM t2;
CREATE VIEW v4 AS
SELECT v3_c3 AS v4_c3, v3_c4 AS v4_c4 FROM v3;
SELECT
    v2_c1,
    v2_c2,
    v4_c3,
    v4_c4
FROM v2 JOIN v4 KEY (v4_c3, v4_c4) -> v2 (v2_c1, v2_c2);
 v2_c1 | v2_c2 | v4_c3 | v4_c4 
-------+-------+-------+-------
     1 |    10 |     1 |    10
     3 |    30 |     3 |    30
(2 rows)

DROP VIEW v1, v2, v3, v4;
--
-- Test subqueries, CTEs, and views
--
WITH
q2 AS
(
    SELECT
        q1_c1 AS q2_c1,
        q1_c2 AS q2_c2
    FROM
    (
        SELECT c1 AS q1_c1, c2 AS q1_c2 FROM t1
    ) AS q1
)
SELECT
    q2_c1,
    q2_c2,
    v4_c3,
    v4_c4
FROM q2 JOIN v4 KEY (v4_c3, v4_c4) -> q2 (q2_c1, q2_c2);
ERROR:  relation "v4" does not exist
LINE 17: FROM q2 JOIN v4 KEY (v4_c3, v4_c4) -> q2 (q2_c1, q2_c2);
                      ^
--
-- Test subqueries, CTEs and VIEWs containing joins
--
SELECT
    q1.c11,
    q1.c12,
    t6.c13,
    t6.c14
FROM
(
    SELECT
        t5.c9,
        t5.c10,
        t5.c11,
        t5.c12
    FROM t5
    JOIN t1 KEY (c1, c2) <- t5 (c11, c12)
    JOIN t1 AS t1_2 KEY (c1, c2) <- t5 (c11, c12)
    JOIN t1 AS t1_3 KEY (c1, c2) <- t5 (c11, c12)
) AS q1
JOIN t6 KEY (c13, c14) -> q1 (c9, c10);
 c11 | c12 | c13 | c14 
-----+-----+-----+-----
   1 |  10 |   1 |   2
   3 |  30 |   3 |   4
   3 |  30 |   3 |   4
(3 rows)

WITH
q1 AS
(
    SELECT
        t5.c9,
        t5.c10,
        t5.c11,
        t5.c12
    FROM t5
    JOIN t1 KEY (c1, c2) <- t5 (c11, c12)
    JOIN t1 AS t1_2 KEY (c1, c2) <- t5 (c11, c12)
    JOIN t1 AS t1_3 KEY (c1, c2) <- t5 (c11, c12)
)
SELECT
    q1.c11,
    q1.c12,
    t6.c13,
    t6.c14
FROM q1
JOIN t6 KEY (c13, c14) -> q1 (c9, c10);
 c11 | c12 | c13 | c14 
-----+-----+-----+-----
   1 |  10 |   1 |   2
   3 |  30 |   3 |   4
   3 |  30 |   3 |   4
(3 rows)

CREATE VIEW v1 AS
SELECT
    t5.c9,
    t5.c10,
    t5.c11,
    t5.c12
FROM t5
JOIN t1 KEY (c1, c2) <- t5 (c11, c12)
JOIN t1 AS t1_2 KEY (c1, c2) <- t5 (c11, c12)
JOIN t1 AS t1_3 KEY (c1, c2) <- t5 (c11, c12);
SELECT
    v1.c11,
    v1.c12,
    t6.c13,
    t6.c14
FROM v1
JOIN t6 KEY (c13, c14) -> v1 (c9, c10);
 c11 | c12 | c13 | c14 
-----+-----+-----+-----
   1 |  10 |   1 |   2
   3 |  30 |   3 |   4
   3 |  30 |   3 |   4
(3 rows)

DROP VIEW v1;
--
-- Test disallowed filtering of referenced table
--
CREATE VIEW v1 AS
SELECT * FROM t1 WHERE c1 > 0;
CREATE VIEW v2 AS
SELECT * FROM t2 WHERE c3 > 0;
-- invalid since v1 is filtered and is the referenced table
SELECT *
FROM v1
JOIN t2 KEY (c3) -> v1 (c1);
ERROR:  cannot use filtered view "v1" as referenced table in foreign key join
DETAIL:  Using a filtered view as the referenced table would violate referential integrity.
-- OK, filtering allowed since v2 is the referencing table
SELECT *
FROM t1
JOIN v2 KEY (c3) -> t1 (c1);
 c1 | c2 | c3 | c4 
----+----+----+----
  1 | 10 |  1 | 10
  3 | 30 |  3 | 30
(2 rows)

-- invalid, since v1 is filtered and is the referenced table
SELECT *
FROM v1
JOIN v2 KEY (c3) -> v1 (c1);
ERROR:  cannot use filtered view "v1" as referenced table in foreign key join
DETAIL:  Using a filtered view as the referenced table would violate referential integrity.
--
-- Test allowed joins not affecting uniqueness
--
SELECT
    q1.c11,
    q1.c12,
    t6.c13,
    t6.c14
FROM
(
    SELECT
        t5.c9,
        t5.c10,
        t5.c11,
        t5.c12
    FROM t5
    JOIN t1 KEY (c1, c2) <- t5 (c11, c12)
) AS q1
JOIN t6 KEY (c13, c14) -> q1 (c9, c10);
 c11 | c12 | c13 | c14 
-----+-----+-----+-----
   1 |  10 |   1 |   2
   3 |  30 |   3 |   4
   3 |  30 |   3 |   4
(3 rows)

--
-- Test disallowed non-unique referenced table
--
SELECT
    q1.c11,
    q1.c12,
    t7.c15,
    t7.c16
FROM
(
    SELECT
        t5.c9,
        t5.c10,
        t5.c11,
        t5.c12
    FROM t5
    JOIN t1 KEY (c1, c2) <- t5 (c11, c12)
    JOIN t6 KEY (c13, c14) -> t5 (c9, c10)
) AS q1
JOIN t7 KEY (c15, c16) -> q1 (c9, c10);
ERROR:  virtual foreign key constraint violation
DETAIL:  Referenced columns target a non-referencing table in derived table, violating uniqueness
SELECT
    q1.c19,
    q1.c20,
    t9.c21,
    t9.c22
FROM
(
    SELECT
        t8.c17,
        t8.c18,
        t8.c19,
        t8.c20
    FROM t8
    JOIN t1 KEY (c1, c2) <- t8 (c19, c20)
) AS q1
JOIN t9 KEY (c21, c22) -> q1 (c17, c18);
ERROR:  virtual foreign key constraint violation
DETAIL:  Nullable columns in derived table's referencing relation violate referential integrity
